{"version":3,"file":"static/js/545.0bfae1f6.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/MoviesItems/MoviesItems.module.css?17a0","components/MoviesItems/MoviesItems.js","webpack://my-app/./src/components/SearchBar/SearchBar.module.css?35a0","components/FormInput/FormInput.js","components/SearchBar/SearchBar.js","components/MoviesPage/MoviesPage.js","services/fetchService.js","utils/imagePicker.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesItems_list__cAG1C\",\"list__item\":\"MoviesItems_list__item__a2zyg\",\"overlay\":\"MoviesItems_overlay__mEXg+\",\"list__item_title\":\"MoviesItems_list__item_title__9Andv\",\"img\":\"MoviesItems_img__fNscv\"};","import styles from './MoviesItems.module.css';\r\n\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\nimport { imagePicker } from '../../utils/imagePicker';\r\n\r\nexport default function MoviesItems({ movies }) {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <>\r\n      {movies && (\r\n        <ul className={styles.list}>\r\n          {movies.map(movie => (\r\n            <li key={movie.id} className={styles.list__item}>\r\n              <Link\r\n                to={{\r\n                  pathname: `/movies/${movie.id}`,\r\n                  state: { from: location },\r\n                }}\r\n              >\r\n                <img\r\n                  className={styles.img}\r\n                  src={imagePicker(movie.poster_path)}\r\n                />\r\n                <div className={styles.overlay}>\r\n                  <p className={styles.list__item_title}>\r\n                    {movie.title || movie.name}\r\n                  </p>\r\n                </div>\r\n              </Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchBar_form__bUxMk\",\"input\":\"SearchBar_input__YpWPo\"};","import { styled } from '@mui/material/styles';\r\nimport { TextField } from '@mui/material';\r\n\r\nconst FormInput = styled(TextField)({\r\n  '& label.Mui-focused': {\r\n    color: 'black',\r\n  },\r\n  '& label.Mui-error': {\r\n    color: 'red',\r\n  },\r\n  '& input:valid + fieldset': {\r\n    borderColor: 'grey',\r\n    borderWidth: 1,\r\n  },\r\n  '& input:invalid + fieldset': {\r\n    borderColor: 'red',\r\n    borderWidth: 2,\r\n  },\r\n  '& input:valid:focus + fieldset': {\r\n    borderColor: 'black',\r\n    borderLeftWidth: 6,\r\n    padding: '4px !important', // override inline-style\r\n  },\r\n  '& div.Mui-error.Mui-focused fieldset': {\r\n    borderColor: 'red',\r\n    borderLeftWidth: 6,\r\n    padding: '4px !important', // override inline-style\r\n  },\r\n});\r\n\r\nexport default FormInput;\r\n","import styles from './SearchBar.module.css';\r\nimport { useForm, Controller } from 'react-hook-form';\r\n\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\nimport FormInput from '../FormInput/FormInput';\r\n\r\nexport default function Searchbar({ onSubmit }) {\r\n  const {\r\n    handleSubmit,\r\n    control,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm({\r\n    defaultValues: { query: '' },\r\n  });\r\n\r\n  const submit = data => {\r\n    if (data.query.trim() === '') {\r\n      return;\r\n    }\r\n    onSubmit(data.query.trim());\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(submit)} className={styles.form}>\r\n      <Controller\r\n        name=\"query\"\r\n        control={control}\r\n        rules={{ required: 'This is required field!!!' }}\r\n        render={({ field }) => (\r\n          <FormInput\r\n            {...field}\r\n            label=\"Search movies\"\r\n            type=\"search\"\r\n            size=\"small\"\r\n            autoComplete=\"off\"\r\n            className={styles.input}\r\n            error={!!errors.query}\r\n            helperText={errors?.query?.message}\r\n          />\r\n        )}\r\n      />\r\n      <IconButton type=\"submit\">\r\n        <SearchIcon />\r\n      </IconButton>\r\n    </form>\r\n  );\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { fetchMovie } from '../../services/fetchService';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n\r\nimport { Oval } from 'react-loader-spinner';\r\n\r\nimport { Alert, AlertTitle } from '@mui/material';\r\n\r\nimport MoviesItems from '../MoviesItems/MoviesItems';\r\nimport SearchBar from '../SearchBar/SearchBar';\r\n\r\nexport default function MoviesPage() {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const [movies, setMovies] = useState(null);\r\n  const [status, setStatus] = useState('idle');\r\n\r\n  const query = new URLSearchParams(location.search).get('query');\r\n\r\n  const onSubmit = q => {\r\n    history.push({ ...location, search: `query=${q}` });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!query) {\r\n      return;\r\n    }\r\n    setStatus('pending');\r\n    fetchMovie(query).then(res => {\r\n      if (res.results.length === 0) {\r\n        setStatus('error');\r\n        return;\r\n      }\r\n      setStatus('resolved');\r\n      setMovies(res.results);\r\n    });\r\n  }, [query]);\r\n\r\n  return (\r\n    <>\r\n      <SearchBar onSubmit={onSubmit} />\r\n      {status === 'resolved' && <MoviesItems movies={movies} />}\r\n      {status === 'pending' && (\r\n        <Oval\r\n          height={50}\r\n          width={50}\r\n          color=\"#000\"\r\n          wrapperStyle={{ display: 'flex', justifyContent: 'center' }}\r\n          secondaryColor=\"#f0\"\r\n          strokeWidth={4}\r\n          strokeWidthSecondary={4}\r\n        />\r\n      )}\r\n      {status === 'error' && (\r\n        <Alert severity=\"error\">\r\n          <AlertTitle>Error</AlertTitle>\r\n          Sorry, nothing found :(\r\n        </Alert>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","const KEY = 'b8e8b8dadac797da0595c7d7e1af61f4';\r\n\r\nexport function fetchTrending() {\r\n  return fetch(`\r\n  https://api.themoviedb.org/3/trending/all/day?api_key=${KEY}`).then(res =>\r\n    res.json(),\r\n  );\r\n}\r\n\r\nexport function fetchMovie(query) {\r\n  return fetch(`\r\n  https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${query}`).then(\r\n    res => res.json(),\r\n  );\r\n}\r\n\r\nexport function fetchMovieById(id) {\r\n  return fetch(`\r\n    https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}`).then(res =>\r\n    res.json(),\r\n  );\r\n}\r\n\r\nexport function fetchMovieCast(id) {\r\n  return fetch(`\r\n    https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}`).then(\r\n    res => res.json(),\r\n  );\r\n}\r\n\r\nexport function fetchMovieReview(id) {\r\n  return fetch(`\r\n  https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}`).then(res =>\r\n    res.json(),\r\n  );\r\n}\r\n","import defaultImg from './default.jpg';\r\n\r\nexport function imagePicker(path) {\r\n  return path ? `https://image.tmdb.org/t/p/w300${path}` : defaultImg;\r\n}\r\n"],"names":["MoviesItems","movies","location","useLocation","className","styles","map","movie","to","pathname","id","state","from","src","imagePicker","poster_path","title","name","styled","TextField","color","borderColor","borderWidth","borderLeftWidth","padding","Searchbar","onSubmit","useForm","defaultValues","query","handleSubmit","control","reset","errors","formState","data","trim","rules","required","render","field","label","type","size","autoComplete","error","helperText","message","IconButton","Search","MoviesPage","history","useHistory","useState","setMovies","status","setStatus","URLSearchParams","search","get","useEffect","fetchMovie","then","res","results","length","q","push","height","width","wrapperStyle","display","justifyContent","secondaryColor","strokeWidth","strokeWidthSecondary","Alert","severity","AlertTitle","KEY","fetchTrending","fetch","json","fetchMovieById","fetchMovieCast","fetchMovieReview","path"],"sourceRoot":""}